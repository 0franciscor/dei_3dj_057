{
	"info": {
		"_postman_id": "c80e2242-59a1-4a27-89a4-83c023fc1ada",
		"name": "Path Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23547760"
	},
	"item": [
		{
			"name": "Create Path",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path1\",\r\n    \"startWHId\": \"WH6\",\r\n    \"destinationWHId\": \"WH5\",\r\n    \"pathDistance\": 200,\r\n    \"pathTravelTime\": 25,\r\n    \"wastedEnergy\": 30,\r\n    \"extraTravelTime\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Path Copy",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path2\",\r\n    \"startWHId\": \"WH5\",\r\n    \"destinationWHId\": \"WH6\",\r\n    \"pathDistance\": 200,\r\n    \"pathTravelTime\": 25,\r\n    \"wastedEnergy\": 30,\r\n    \"extraTravelTime\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Path Test unexistingId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Path not found\", function() {\r",
							"    pm.response.to.have.body(\"Path not found\"); \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/path/id/pathTest",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"id",
						"pathTest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Start Warehouses Test",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n{\r\n    \"id\":\"WH0\",\r\n    \"address\":\"Rua pequena,20,4544-111,porto\",\r\n    \"altitude\": 40,\r\n    \"latitude\": \"70\",\r\n    \"longitude\":\"100\",\r\n    \"designation\":\"WareHouse teste2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/warehouses/CreateWarehouse",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"warehouses",
						"CreateWarehouse"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Dest Warehouses Test",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n{\r\n    \"id\":\"W01\",\r\n    \"address\":\"Rua pequena,20,4544-111,porto\",\r\n    \"altitude\": 40,\r\n    \"latitude\": \"70\",\r\n    \"longitude\":\"100\",\r\n    \"designation\":\"WareHouse teste2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/warehouses/CreateWarehouse",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"warehouses",
						"CreateWarehouse"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Path Wrong startWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Warehouse not found\", function() {\r",
							"    pm.response.to.have.body(\"Start Warehouse not found\"); \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path9\",\r\n    \"startWHId\": \"WH8\",\r\n    \"destinationWHId\": \"WH1\",\r\n    \"pathDistance\": 100,\r\n    \"pathTravelTime\": 35,\r\n    \"wastedEnergy\": 40,\r\n    \"extraTravelTime\": 0\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Path Wrong DestWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Warehouse not found\", function() {\r",
							"    pm.response.to.have.body(\"Destination warehouse not found\"); \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path9\",\r\n    \"startWHId\": \"WH0\",\r\n    \"destinationWHId\": \"WH8\",\r\n    \"pathDistance\": 100,\r\n    \"pathTravelTime\": 35,\r\n    \"wastedEnergy\": 40,\r\n    \"extraTravelTime\": 0\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Path Test",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"startWHId\": \"WH0\",\r\n    \"destinationWHId\": \"W01\",\r\n    \"pathDistance\": 100,\r\n    \"pathTravelTime\": 35,\r\n    \"wastedEnergy\": 40,\r\n    \"extraTravelTime\": 0\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Already Existing Path",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.response.to.have.status(409);\r",
							"});\r",
							"\r",
							"pm.test(\"Path already exists\", function() {\r",
							"    pm.response.to.have.body(\"Path already exists\"); \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"startWHId\": \"WH5\",\r\n    \"destinationWHId\": \"WH6\",\r\n    \"pathDistance\": 100,\r\n    \"pathTravelTime\": 35,\r\n    \"wastedEnergy\": 40,\r\n    \"extraTravelTime\": 0\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Path Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/path/id/path3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"id",
						"path3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Paths",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/path/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ALL path by startWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"startWHId\": \"WH0\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ALL path by destWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"destinationWHId\": \"W01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ALL path with startWH and DestWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \"startWHId\":\"WH1\",\r\n    \"destinationWHId\": \"W01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ALL path with unexisting startWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"startWHId\": \"WH9\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ALL path with unexisting destWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"destinationWHId\": \"WH9\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  pathdistance Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"pathDistance\": 200\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  unexisting pathdistance Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Not acceptable distance\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Not acceptable distance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"pathDistance\": -1\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  pathTravelTime Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"pathTravelTime\": 20\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  unexisting pathTravelTime Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"This travel time is not acceptable\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This travel time is not acceptable\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"pathTravelTime\":0\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  wastedEnergy Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"wastedEnergy\": 30\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  unexisting wastedEnegery Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"This wasted energy is not acceptable\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This wasted energy is not acceptable\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"wastedEnergy\":0\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  extraTravelTime Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"extraTravelTime\": 20\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path  unexisting extraTravelTimeTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"This extra travel time indicator is not acceptable\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This extra travel time indicator is not acceptable\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"extraTravelTime\":-1\r\n    \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path Test startWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Starting Warehouse ID cannot be changed\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Starting Warehouse ID cannot be changed\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"startWHId\": \"WH3\"\r\n\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Path Test destWH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Destination Warehouse ID cannot be changed\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Destination Warehouse ID cannot be changed\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pathID\": \"path3\",\r\n    \"destinationWHId\": \"WH3\"\r\n\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/path/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete wrong Path Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Path not found\", function () {\r",
							"    pm.response.to.have.body(\"Path not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/path/id/path2312",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"id",
						"path2312"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete start test warehouse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/warehouses/Delete/WH0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"warehouses",
						"Delete",
						"WH0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete destination warehouse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/warehouses/Delete/W01",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"warehouses",
						"Delete",
						"W01"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Path Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/path/id/path3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"path",
						"id",
						"path3"
					]
				}
			},
			"response": []
		}
	]
}