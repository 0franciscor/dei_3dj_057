
@startuml 
autonumber

actor "Warehouse Manager" as admin


box "<<Container(C4)>>\n       UI" #LightYellow
participant CreateWarehouseComponent as uiComponent <<Container(C4)>>
participant CreateWarehouseService as uiService <<Container(C4)>>
box "<<Container(C4)>>\n       Auth" #LightBlue
participant WarehouseController as authController <<Container(C4)>>
box "<<Container(C4)>>\n    Warehouse Management" #LightGreen
participant WarehouseRoute as  WM <<Component(C4)>>
participant WarehouseController as  CTL <<Component(C4)>>
participant WarehouseService as  SV <<Component(C4)>>
participant "warehouse : Warehouse" as  W <<Component(C4)>>
participant "warehouseDto : WarehouseDTO" as  DTO <<Component(C4)>>
participant WarehouseRepository as  WR <<Component(C4)>>
end box
end box

admin -> uiComponent: I want to create a new warehouse
activate uiComponent

uiComponent -> admin: asks for the details on the new warehouse
deactivate uiComponent

admin -> uiComponent: inserts the information about the new warehouse

activate uiComponent
uiComponent -> uiService: createWarehouse(warehouseDto)
activate uiService
uiService -> authController : POST createWarehouse(warehouseDto)
activate authController
authController -> WM : POST createWarehouse(warehouseDto)
activate WM
WM -> CTL : CreateWarehouse(warehouseDto)
deactivate WM
deactivate authController
deactivate uiService
alt If warehouse donÂ´t exist in the system 

activate CTL
CTL -> SV : CreateWarehouse(warehouseDto)
activate SV

SV -> W : Create(warehouseDto)
activate W
W --> SV : warehouse 
deactivate W

SV -> WR : save(warehouse)
activate WR
WR --> SV : true 
deactivate WR

SV -> W : toWarehouseDTO()
activate W
W --> SV : warehouseDto
deactivate W
SV --> CTL : warehouseDto
deactivate SV
CTL --> WM : warehouseDto
activate WM
deactivate CTL


WM --> authController: 200 OK
activate authController
authController --> uiService : 200 OK 
activate uiService 
uiService --> uiComponent : 200 OK 
deactivate uiService
deactivate authController
deactivate WM

uiComponent -> admin: informs about the success of the operation
deactivate uiComponent

else If a warehouse already exists with the id entered


activate CTL
CTL -> SV : CreateWarehouse(warehouseDto)
activate SV

SV -> W : Create(warehouseDto)
activate W
W --> SV : warehouse 
deactivate W

SV -> WR : save(warehouse)
activate WR
WR --> SV : false
deactivate WR
SV --> CTL : InvalidOperationException

deactivate SV
CTL --> WM : InvalidOperationException


deactivate CTL
activate WM
WM --> authController: 409 CONFLICT
activate authController
authController --> uiService : 409 CONFLICT 
activate uiService 
uiService --> uiComponent : 409 CONFLICT 
deactivate uiService
deactivate authController
deactivate WM

activate uiComponent
uiComponent -> admin: informs about the fail of the operation
deactivate uiComponent 

else If the attributes do not respect the business rules

activate CTL
CTL -> SV : CreateWarehouse(warehouseDto)
activate SV

SV -> W : Create(warehouseDto)
activate W
W --> SV : BusinessRuleValidationException
deactivate W

SV --> CTL : BusinessRuleValidationException
deactivate SV
CTL --> WM : BusinessRuleValidationException
deactivate CTL
deactivate CTL
activate WM
WM --> authController: 409 CONFLICT
activate authController
authController --> uiService : 409 CONFLICT 
activate uiService 
uiService --> uiComponent : 409 CONFLICT 
deactivate uiService
deactivate authController
deactivate WM

activate uiComponent
uiComponent -> admin: informs about the fail of the operation
deactivate uiComponent 
end 
deactivate uiComponent
deactivate admin

@enduml
