@startuml updateTruckSD

autonumber
!pragma teoz true

skinparam sequence {
ParticipantBorderColor black
ParticipantBackgroundColor white
}

actor "Fleet Manager" as manager

box "<<System(C4)>>\n       System" #LightGray
participant SPA as  SPA <<Container(C4)>>
box "<<Container(C4)>>\n       Logistics" #LightCyan
participant TruckRoute as Route <<Component(C4)>>
participant TruckController as Controller <<Component(C4)>>
participant TruckService as Service <<Component(C4)>>
participant TruckRepository as Repository <<Component(C4)>>
participant Persistance as Persistance <<Component(C4)>>
end box



activate manager
activate SPA
manager -> SPA: Asks to update a Truck

SPA -> manager: Asks for Truck ID
deactivate SPA

manager ->SPA: Inserts Truck ID
activate SPA

SPA -> Route: PATCH updateTruck(truck)
activate Route
Route -> Controller :PATCH updateTruck(truck)
activate Controller

alt Truck exists 

Controller -> Service: updateTruck(truck)
activate Service

Service -> Repository: getTruckById(truckInfo.id)
activate Repository

Repository -> Persistance: findOne(truckInfo.id)
activate Persistance
Persistance -> Repository: truck
Repository->Service: truck

Service -> Repository: update(truckInfo)
Repository -> Persistance:save(truckInfo)

Repository -> Persistance:true
Repository-> Service: truckInfo
Service-> Controller: truckInfo

Controller->Route: 200 OK + truckInfo
Route ->SPA: 200 OK + truckInfo
SPA-> manager: shows updated information 

else Truck doesn't exists

Controller -> Service: updateTruck(truck)
Service -> Repository: getTruckById(truckInfo.id)
Repository->Persistance: findOne(truckInfo.id)
Persistance ->Repository: null
Repository->Service: null
Service->Controller: error, truck doesn't exist
Controller-> Route: 404 NOT FOUND, Truck doesn't exist
Route ->SPA: 404 NOT FOUND, Truck doesn't exist
SPA->manager: informs about update failure

@enduml