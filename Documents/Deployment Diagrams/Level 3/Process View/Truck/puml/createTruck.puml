@startuml createTruckSD

autonumber
!pragma teoz true

skinparam sequence {
ParticipantBorderColor black
ParticipantBackgroundColor white
}

actor "Fleet Manager" as manager

box "<<System(C4)>>\n       System" #LightGray
participant SPA as  SPA <<Container(C4)>>
box "<<Container(C4)>>\n       Logistics" #LightCyan
participant TruckRoute as Route <<Component(C4)>>
participant TruckController as Controller <<Component(C4)>>
participant TruckService as Service <<Component(C4)>>
participant TruckRepository as Repository <<Component(C4)>>
participant Persistance as Persistance <<Component(C4)>>
end box



activate manager
activate SPA
manager -> SPA: Asks to create a new Truck

SPA -> manager: Asks for info about new Truck
deactivate SPA

manager ->SPA: Inserts Truck info
activate SPA

SPA -> Route: POST createTruck(TruckInfo)
activate Route
Route -> Controller :POST createTruck(TruckInfo)
activate Controller

alt Truck doesn't exist 

Controller -> Service: createTruck(TruckInfo)
activate Service

Service -> Repository: getTruckById(TruckInfo.id)
activate Repository

Repository -> Persistance: findOne(TruckInfo.id)
activate Persistance
Persistance -> Repository: null
Repository->Service: null

Service -> Repository: save(TruckInfo)
Repository -> Persistance:save(TruckInfo)
Persistance->Repository: true
Repository->Service: TruckInfo
Service->Controller: TruckInfo
Controller->Route: 201 CREATED + TruckInfo
Route->SPA: 201 CREATED
SPA->manager: Informs about truck successfully created
deactivate Service
deactivate Repository

else Truck already exists

Controller -> Service: createTruck(TruckInfo)
activate Service

Service -> Repository: getTruckById(TruckInfo.id)
activate Repository

Repository -> Persistance: findOne(TruckInfo.id)
Persistance-> Repository: Truck
Repository->Service: Truck
Service->Controller: error, Truck already exists
Controller->Route: 409 CONFLIT, Truck already exists
Route->SPA: 409 CONFLIT, Truck already exists
SPA->manager: Informs about failure creating new Truck

@enduml