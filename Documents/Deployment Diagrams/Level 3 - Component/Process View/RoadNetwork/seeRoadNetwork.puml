@startuml seeRoadNetwork

autonumber
!pragma teoz true

skinparam sequence {
ParticipantBorderColor black
ParticipantBackgroundColor white
}

actor "Logistics Manager" as manager

participant Google as Google <<System(C4)>>
box "<<System(C4)>>\n       System" #LightYellow
    box "<<Container(C4)>>\n           UI" #LightCyan
        
        participant LoginController as LoginC <<Component(C4)>>
        participant LoginService as LoginS <<Component(C4)>>
    
    
        participant RoadNetworkComponent as RNC <<Component(C4)>>
        participant RoadNetworkService as RNS <<Component(C4)>>
    
    end box

    box "<<Container(C4)>>\nAuthentication" #LightSkyBlue

        participant UserController as UserCTRL <<Container(C4)>> 
        participant UserService as UserServ <<Container(C4)>> 
        participant UserRepository as UserRepo <<Container(C4)>> 

        participant TruckController as TruckCTRL <<Container(C4)>>
        participant WarehouseController as WarehouseCTRL <<Container(C4)>>
        participant PathsController as PathsCTRL <<Container(C4)>>
    end box

    box "<<Container(C4)>>\n       Logistics" #LightBlue
        participant TruckRoute as Route <<Component(C4)>>
        participant TruckController as Controller <<Component(C4)>>
        participant TruckS as Service <<Component(C4)>>
        participant TruckRepository as Repository <<Component(C4)>>
        participant Persistence as Persistence <<Component(C4)>>
        participant PathRoute as PathRoute <<Component(C4)>>
        participant PathController as PathController <<Component(C4)>>
        participant PathService as PathService <<Component(C4)>>
        participant PathRepository as PathRepository <<Component(C4)>>
        participant Persistence as PathPersistence <<Component(C4)>>
    end box

     box "<<Container(C4)>>\nWarehouse Management" #LightGreen
        participant WarehouseController as  CTL <<Component(C4)>>
        participant WarehouseService as  SV <<Component(C4)>>
        participant "Warehouse : Warehouse" as  Warehouse <<Component(C4)>>
        participant "WarehouseDTO : WarehouseDTO" as  DTO <<Component(C4)>>
        participant WarehouseRepository as  WR <<Component(C4)>>
    end box

end box


activate manager
manager->LoginC: I want to login
activate LoginC

alt Login through email and password in EletricGo


    LoginC -> LoginS: login(email, password)
    activate LoginS
    LoginS -> UserCTRL: POST Login(email, password)
    activate UserCTRL

    UserCTRL -> UserServ: login(email, password)
    activate UserServ
    UserServ -> UserRepo: findByEmail(email)
    activate UserRepo
    UserRepo --> UserServ: User
    deactivate UserRepo
    UserServ -> UserServ: checkPassword(password, User)
    UserServ --> UserCTRL: Success
    deactivate UserServ


    UserCTRL --> LoginS: 200 OK + Cookie
    deactivate UserCTRL

    LoginS --> LoginC: 200 OK
    deactivate LoginS

else Login through Google

    LoginC -> Google: Login with Google account
    activate Google
    Google --> LoginC: 200 OK
    deactivate Google
    LoginC -> LoginS: loginWithGoogle()
    activate LoginS
    LoginS -> UserCTRL: POST LoginWithGoogle()
    activate UserCTRL
    UserCTRL -> UserServ: userExists()
    activate UserServ
    UserServ -> UserRepo: findByEmail(email)
    activate UserRepo
    UserRepo --> UserServ: User
    deactivate UserRepo
    UserServ --> UserCTRL: User
    deactivate UserServ
    UserCTRL --> LoginS: 200 OK + Cookie
    deactivate UserCTRL
    LoginS --> LoginC: 200 OK
    deactivate LoginS

    deactivate Google

end



LoginC --> manager: informs about the success of login
deactivate LoginC


manager -> RNC: Asks to see the Road Network
activate RNC
RNC -> RNS: getAllWarehouses()
activate RNS

RNS -> WarehouseCTRL: GET getAllWarehouses()
activate WarehouseCTRL
WarehouseCTRL -> WarehouseCTRL: checkCookie()

WarehouseCTRL -> CTL: GET getAllWarehouses()
activate CTL
CTL -> SV: getAllWarehouses()
activate SV
SV -> WR : GetAll()
activate WR

WR --> SV : listOfWarehouses
deactivate WR
SV -> Warehouse : toWarehouseDto(listOfWarehouse)
activate Warehouse

Warehouse --> SV : listOfWarehousesDto
deactivate Warehouse
SV --> CTL : listOfWarehousesDto
deactivate SV
CTL --> WarehouseCTRL : 200 OK + listOfWarehouses
deactivate CTL
WarehouseCTRL --> RNS : 200 OK + listOfWarehouses
deactivate WarehouseCTRL
RNS --> RNC : 200 OK + listOfWarehouses

loop for each Warehouse
    RNC -> RNS: allPaths(warehouse)
    RNS -> PathsCTRL: GET allPaths(warehouse)
    activate PathsCTRL
    PathsCTRL -> PathsCTRL: checkCookie()
    PathsCTRL -> PathRoute: GET allPaths(warehouse)
    activate PathRoute
    PathRoute -> PathController: allPaths(warehouse)
    activate PathController
    PathController -> PathService: allPaths(warehouse)
    activate PathService
    PathService -> PathRepository: allPaths(warehouse)
    activate PathRepository
    PathRepository -> PathPersistence: findAll(warehouse)
    activate PathPersistence
    PathPersistence --> PathRepository: listOfPaths
    deactivate PathPersistence
    PathRepository --> PathService: listOfPaths
    deactivate PathRepository
    PathService --> PathController: listOfPaths
    deactivate PathService
    PathController --> PathRoute: 200 OK + listOfPaths
    deactivate PathController
    PathRoute --> PathsCTRL: 200 OK + listOfPaths
    deactivate PathRoute
    PathsCTRL --> RNS: 200 OK + listOfPaths
    deactivate PathsCTRL
    RNS --> RNC: 200 OK + listOfPaths
    
end

RNC -> RNS: getAllTrucks()

RNS -> TruckCTRL: GET getAllTrucks()
activate TruckCTRL
TruckCTRL -> TruckCTRL: checkAuth()
TruckCTRL -> Route: GET getAllTrucks()
activate Route
Route -> Controller: GET getAllTrucks()
activate Controller



Controller -> Service: getAllTrucks()
activate Service

Service -> Repository: getAllTrucks()
activate Repository
Repository -> Persistence: find()
activate Persistence



Persistence -> Repository: AllTrucks
deactivate Persistence
Repository->Service: AllTrucks
deactivate Repository

Service -> Controller: AllTrucks
deactivate Service
Controller->Route: 200 OK + AllTrucks
deactivate Controller
Route->TruckCTRL: 200 OK + AllTrucks
deactivate Route
TruckCTRL->RNS: 200 OK + AllTrucks
deactivate TruckCTRL
RNS->RNC: 200 OK + AllTrucks
deactivate RNS
RNC->manager: Shows Road Network
deactivate RNC
deactivate manager


@enduml