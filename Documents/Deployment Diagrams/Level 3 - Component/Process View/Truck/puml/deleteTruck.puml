@startuml deleteTruckSD

autonumber
!pragma teoz true

skinparam sequence {
ParticipantBorderColor black
ParticipantBackgroundColor white
}

actor "Logistics Manager" as manager

participant Google as Google <<System(C4)>>
box "<<System(C4)>>\n       System" #LightYellow
    box "<<Container(C4)>>\n           UI" #LightCyan
        
        participant LoginController as LoginC <<Component(C4)>>
        participant LoginService as LoginS <<Component(C4)>>
    
    
    
        participant TruckComponent as TruckC <<Component(C4)>>
        participant TruckS as TruckS <<Component(C4)>>
        

    end box

    box "<<Container(C4)>>\nAuthentication" #LightSkyBlue

        participant UserController as UserCTRL <<Container(C4)>> 
        participant UserService as UserServ <<Container(C4)>> 
        participant UserRepository as UserRepo <<Container(C4)>> 

        participant TruckController as TruckCTRL <<Container(C4)>>

    end box
    box "<<Container(C4)>>\n       Logistics" #LightBlue
        participant TruckRoute as Route <<Component(C4)>>
        participant TruckController as Controller <<Component(C4)>>
        participant TruckS as Service <<Component(C4)>>
        participant TruckRepository as Repository <<Component(C4)>>
        participant Persistence as Persistence <<Component(C4)>>
    end box

end box


activate manager
manager->LoginC: I want to login
activate LoginC

alt Login through email and password in EletricGo


    LoginC -> LoginS: login(email, password)
    activate LoginS
    LoginS -> UserCTRL: POST Login(email, password)
    activate UserCTRL

    UserCTRL -> UserServ: login(email, password)
    activate UserServ
    UserServ -> UserRepo: findByEmail(email)
    activate UserRepo
    UserRepo --> UserServ: User
    deactivate UserRepo
    UserServ -> UserServ: checkPassword(password, User)
    UserServ --> UserCTRL: Success
    deactivate UserServ


    UserCTRL --> LoginS: 200 OK + Cookie
    deactivate UserCTRL

    LoginS --> LoginC: 200 OK
    deactivate LoginS

else Login through Google

    LoginC -> Google: Login with Google account
    activate Google
    Google --> LoginC: 200 OK
    deactivate Google
    LoginC -> LoginS: loginWithGoogle()
    activate LoginS
    LoginS -> UserCTRL: POST LoginWithGoogle()
    activate UserCTRL
    UserCTRL -> UserServ: userExists()
    activate UserServ
    UserServ -> UserRepo: findByEmail(email)
    activate UserRepo
    UserRepo --> UserServ: User
    deactivate UserRepo
    UserServ --> UserCTRL: User
    deactivate UserServ
    UserCTRL --> LoginS: 200 OK + Cookie
    deactivate UserCTRL
    LoginS --> LoginC: 200 OK
    deactivate LoginS

    deactivate Google

end



LoginC --> manager: informs about the success of login
deactivate LoginC


manager -> TruckC: Asks to delete Truck
activate TruckC
TruckC -> manager: Asks for Truck ID

manager ->TruckC: Inserts Truck ID

TruckC -> TruckS: deleteTruck(Truck ID)
activate TruckS
TruckS -> TruckCTRL: DELETE deleteTruck(Truck ID)
activate TruckCTRL

TruckCTRL -> TruckCTRL: checkCookie()

TruckCTRL -> Route: DELETE deleteTruck(truckID)
activate Route
Route -> Controller :DELETE deleteTruck(truckID)
activate Controller



Controller -> Service: deleteTruck(truckInfo)
activate Service

Service -> Repository: getTruckById(TruckInfo.id)
activate Repository
Repository -> Persistence: findOne(TruckInfo.id)
activate Persistence

alt Truck exists

    Persistence -> Repository: truckInfo
    Repository->Service: truckInfo

    Service -> Repository: delete(truckID)
    Repository -> Persistence:deleteOne(truckInfo)

    Persistence->Repository: true

    Repository->Service: TruckInfo

    Service->Controller: TruckInfo
    Controller->Route: 200 OK + TruckInfo
    Route->TruckCTRL: 200 OK + TruckInfo
    TruckCTRL->TruckS: 200 OK + TruckInfo
    TruckS->TruckC: 200 OK + TruckInfo
    TruckC->manager: 200 OK + TruckInfo


else Truck doesn't exist

    Service -> Repository: getTruckById(TruckInfo.id)
    
    Repository -> Persistence: findOne(TruckInfo.id)

    Persistence->Repository: null
    deactivate Persistence
    Repository->Service: null
    deactivate Repository
    Service->Controller: error, Truck doesn't exist
    deactivate Service
    Controller->Route: 404 NOT FOUND, Truck doesn't exist
    deactivate Controller
    Route->TruckCTRL: 404 NOT FOUND, Truck doesn't exist
    deactivate Route
    TruckCTRL->TruckS: 404 NOT FOUND, Truck doesn't exist
    deactivate TruckCTRL
    TruckS->TruckC: 404 NOT FOUND, Truck doesn't exist
    deactivate TruckS
    TruckC->manager: Informs about deletion failure
    deactivate TruckC

end

@enduml